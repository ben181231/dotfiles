# homebrew
if [[ -s "/opt/homebrew/bin/brew" ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)";
  fpath=($(brew --prefix)/share/zsh/site-functions $fpath)
fi

# hub CLI
if which hub > /dev/null; then
  eval "$(hub alias -s)";
fi

# pyenv
if which pyenv > /dev/null; then
  export PYENV_ROOT="$HOME/.pyenv";
  export PATH="$PYENV_ROOT/bin:$PATH";
  eval "$(pyenv init --path)";
  eval "$(pyenv init -)";
fi

# nvm
if [[ -s "$HOMEBREW_PREFIX/opt/nvm/nvm.sh" ]]; then
  source "$HOMEBREW_PREFIX/opt/nvm/nvm.sh";
  export NVM_DIR="$HOME/.nvm";
  mkdir -p $NVM_DIR;
fi
if [[ -s "$HOMEBREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ]]; then
  source "$HOMEBREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm";
fi

# nodenv
if which nodenv > /dev/null; then
  eval "$(nodenv init -)"
fi

# rbenv
if which rbenv > /dev/null; then
  eval "$(rbenv init -)";
fi

# direnv
if which direnv > /dev/null; then
  eval "$(direnv hook zsh)";
fi

# k3d
if which k3d > /dev/null; then
  eval "$(k3d completion zsh)";
fi

# deno
if which deno > /dev/null; then
  export PATH=$HOME/.deno/bin:$PATH;
fi

# haskell stack
if which stack > /dev/null; then
  eval "$(stack --bash-completion-script stack)";
fi

# anyenv
if which anyenv > /dev/null; then
  alias getanyenv='eval "$(anyenv init -)"';
fi

# GCloud CLI Auto Completion
if [[ -s "$HOME/gcloud/path.zsh.inc" ]]; then
  source "$HOME/gcloud/path.zsh.inc";
fi
if [[ -s "$HOME/gcloud/completion.zsh.inc" ]]; then
  source "$HOME/gcloud/completion.zsh.inc";
fi

# App Engine
if [[ -e "$HOME/gcloud/platform/google_appengine" ]]; then
  export PATH="$HOME/gcloud/platform/google_appengine:$PATH";
fi

# ghcup-env
if [[ -s "$HOME/.ghcup/env" ]]; then
  source "$HOME/.ghcup/env";
fi

#zsh-syntax-highlight
if [[ -s "$HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
  source "$HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh";
fi

#zsh-autosuggestions
if [[ -s "$HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  export ZSH_AUTOSUGGEST_STRATEGY=(completion history)
  source "$HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh";
fi

# merknife
if which merknife > /dev/null; then
  eval "$(merknife completion zsh)";
fi

# fzf
if which fzf > /dev/null; then
  source <(fzf --zsh)
fi

# zoxide
if which zoxide > /dev/null; then
  eval "$(zoxide init zsh --cmd j)";
fi

# beyond-cli
if which beyond > /dev/null; then
  source <(beyond completion zsh);
  compdef _beyond beyond;
fi

# chatgpt-cli
if [[ -s "$HOMEBREW_PREFIX/bin/chatgpt" ]]; then
  if alias chatgpt &> /dev/null; then
    unalias chatgpt
  fi

  mkdir -p $HOME/.chatgpt-cli/history
  export OPENAI_CONFIG_HOME=$HOME/.chatgpt-cli
  export OPENAI_DATA_HOME=$HOME/.chatgpt-cli/history

  eval "$(chatgpt --set-completions zsh)"
fi

# OpenJDK
if [[ -d "$HOMEBREW_PREFIX/opt/openjdk/bin" ]]; then
  export PATH="$HOMEBREW_PREFIX/opt/openjdk/bin:$PATH"
fi

# kind
if [[ -s $HOMEBREW_PREFIX/bin/kind ]]; then
  eval "$(kind completion zsh)"
fi

# aqua
if which aqua > /dev/null; then
  export PATH="$(aqua root-dir)/bin:$PATH"
  eval "$(aqua completion zsh)";
fi

# 1Password CLI
if which op > /dev/null; then
  eval "$(op completion zsh)";
  compdef _op op;
fi

